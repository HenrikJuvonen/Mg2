<Window x:Class="Mg2.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:b="clr-namespace:Mg2.Behaviors"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
        Width="800" Height="550"
        Icon="../Resources/Mg2.ico"
        x:Name="Root">
    <Window.Resources>
        <b:Triggers x:Key="PackageItemsViewTriggers" x:Shared="false">
            <i:EventTrigger EventName="MouseDoubleClick">
                <cmd:EventToCommand Command="{Binding DataContext.MarkCommand, ElementName=Root}" />
            </i:EventTrigger>
            <b:KeyPressTrigger KeyAction="KeyUp" Gesture="space">
                <cmd:EventToCommand Command="{Binding DataContext.MarkCommand, ElementName=Root}" />
            </b:KeyPressTrigger>
            <b:KeyPressTrigger KeyAction="KeyUp" Gesture="enter">
                <cmd:EventToCommand Command="{Binding DataContext.MarkCommand, ElementName=Root}" />
            </b:KeyPressTrigger>
        </b:Triggers>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="Read Markings..." Command="{Binding ReadMarkingsCommand}"/>
                <MenuItem Header="Save Markings As..." Command="{Binding SaveMarkingsAsCommand}"/>
                <Separator/>
                <MenuItem Header="Exit" Command="{Binding CloseCommand}"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Unmark All" Command="{Binding UnmarkAllCommand}"/>
                <MenuItem Header="Apply Marked Changes" Command="{Binding ApplyMarkedChangesCommand}"/>
            </MenuItem>
            <MenuItem Header="Package">
                <MenuItem Header="Unmark" Command="{Binding UnmarkCommand}"/>
                <MenuItem Header="Mark for Installation" Command="{Binding MarkForInstallationCommand}"/>
                <MenuItem Header="Mark for Update" Command="{Binding MarkForUpdateCommand}"/>
                <MenuItem Header="Mark for Removal" Command="{Binding MarkForRemovalCommand}"/>
                <Separator />
                <MenuItem Header="Properties" Command="{Binding PropertiesCommand}"/>
            </MenuItem>
            <MenuItem Header="Tools">
                <MenuItem Header="Options" Command="{Binding OptionsCommand}"/>
                <MenuItem Header="Package Sources" Command="{Binding RepositoriesCommand}"/>
                <MenuItem Header="Filters" Command="{Binding FiltersCommand}"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="Contents" Command="{Binding ContentsCommand}"/>
                <MenuItem Header="About" Command="{Binding AboutCommand}"/>
            </MenuItem>
        </Menu>
        <ToolBarTray Grid.Row="1" IsEnabled="{Binding IsIdle}">
            <ToolBar>
                <Button Content="Reload" Command="{Binding ReloadCommand}"/>
                <Button Content="Apply" Command="{Binding ApplyMarkedChangesCommand}"/>
                <Button Content="Properties" Command="{Binding PropertiesCommand}"/>
            </ToolBar>
        </ToolBarTray>
        <Grid Grid.Row="2" IsEnabled="{Binding IsIdle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ComboBox Grid.Column="0" ItemsSource="{Binding Filters}" SelectedItem="{Binding SelectedFilter}" Name="FiltersBox"/>
            <TextBox Grid.Column="1" Style="{StaticResource WatermarkTextBoxStyle}" Text="{Binding Query}" Name="QueryBox"/>
        </Grid>
        <ListView Grid.Row="3" Name="PackageItemsView" Tag="{Binding PackageItems}" IsEnabled="{Binding IsIdle}" SelectedItem="{Binding SelectedPackageItem}" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" SelectionMode="Single">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="b:SupplementaryInteraction.Triggers" Value="{StaticResource PackageItemsViewTriggers}" />
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Tag="{Binding DataContext, ElementName=Root}" Margin="2,0,2,0">
                                    <Border.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Unmark" Command="{Binding PlacementTarget.Tag.UnmarkCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                            <MenuItem Header="Mark for Installation" Command="{Binding PlacementTarget.Tag.MarkForInstallationCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                            <MenuItem Header="Mark for Update" Command="{Binding PlacementTarget.Tag.MarkForUpdateCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                            <MenuItem Header="Mark for Removal" Command="{Binding PlacementTarget.Tag.MarkForRemovalCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                            <Separator />
                                            <MenuItem Header="Properties" Command="{Binding PlacementTarget.Tag.PropertiesCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                        </ContextMenu>
                                    </Border.ContextMenu>
                                    <GridViewRowPresenter VerticalAlignment="Center" SnapsToDevicePixels="True" Margin="0,1,0,1" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Background" Value="{Binding Mark, Converter={StaticResource MarkToCellBrush}}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView AllowsColumnReorder="False">
                    <GridView.Columns>
                        <GridViewColumn Header="S" Width="19">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True" Margin="-6,0,-6,0">
                                        <Button Width="18" Height="18" Margin="0,-1,0,-1" Style="{StaticResource Square}"
                                                Content="{Binding Mark, Converter={StaticResource MarkToButtonText}}"
                                                Background="{Binding Mark, Converter={StaticResource MarkToButtonBrush}}"
                                                ToolTip="{Binding}" ToolTipService.IsEnabled="False"
                                                ContextMenuOpening="OnContextMenuOpening"
                                                Tag="{Binding DataContext, ElementName=Root}"
                                                IsTabStop="False">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <cmd:EventToCommand Command="{Binding DataContext.MarkButtonClickCommand, ElementName=Root}" PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <Button.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Unmark" Command="{Binding PlacementTarget.Tag.UnmarkCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                    <MenuItem Header="Mark for Installation" Command="{Binding PlacementTarget.Tag.MarkForInstallationCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                    <MenuItem Header="Mark for Update" Command="{Binding PlacementTarget.Tag.MarkForUpdateCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                    <MenuItem Header="Mark for Removal" Command="{Binding PlacementTarget.Tag.MarkForRemovalCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                </ContextMenu>
                                            </Button.ContextMenu>
                                        </Button>
                                    </Border>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="19">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True" Margin="-6,0,-6,0">
                                        <Button Width="18" Height="18" Margin="0,-1,0,-1" IsEnabled="False" Style="{StaticResource Square}"/>
                                    </Border>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" Width="280"/>
                        <GridViewColumn Header="Version" DisplayMemberBinding="{Binding Version}" Width="140"/>
                        <GridViewColumn Header="Summary" DisplayMemberBinding="{Binding Summary}" Width="1600"/>
                    </GridView.Columns>
                </GridView>
            </ListView.View>
        </ListView>
        <GridSplitter Grid.Row="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" ShowsPreview="True" Height="4"/>
        <TextBox Grid.Row="5" Text="{Binding SelectedPackageItemDescription, Mode=OneWay}" IsReadOnly="True" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Visible" />
        <StatusBar Grid.Row="6">
            <StatusBarItem Content="{Binding Status}"/>
        </StatusBar>
    </Grid>
</Window>
